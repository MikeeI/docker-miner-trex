name: Docker Image CI

on:
  push:
    branches:
      - master

jobs:
  get_version:
    runs-on: ubuntu-latest
    name: Get latest T-Rex version
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Fetch release version
        run: |
          curl -sL https://api.github.com/repos/trexminer/t-rex/releases/latest | \
          jq -r ".tag_name" > release-versions/t-rex-latest.txt

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")

      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'T-Rex New Release'
          git config --global user.email 't-rex-release@users.noreply.github.com'
          git commit -am "New release version"

      - name: Create Pull Request
        if: steps.git-check.outputs.modified == 'true'
        uses: peter-evans/create-pull-request@v3

  docker_images:
    runs-on: ubuntu-latest
    name: Build and push image
    strategy:
      fail-fast: true
      matrix:
        cuda_version:
          - "11.3.0"
          - "11.2.1"
          - "11.2.0"
          - "11.1"
          - "11.0"
          - "10.2"
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Read VERSION file
        id: getversion
        run: echo "::set-output name=version::$(cat VERSION)"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/miner-trex-cuda:v${{ steps.getversion.outputs.version }}-cuda-${{ matrix.cuda_version }}, ${{ secrets.DOCKERHUB_USERNAME }}/miner-trex-cuda:latest-cuda-${{ matrix.cuda_version }}
          build-args: |
            TREX_VERSION=${{ steps.getversion.outputs.version }}
            NVIDIA_CUDA_VERSION=${{ matrix.cuda_version }}

      - name: Get image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  docker_description:
    runs-on: ubuntu-latest
    name: Update dockerhub description
    needs: docker_images
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/miner-trex-cuda
